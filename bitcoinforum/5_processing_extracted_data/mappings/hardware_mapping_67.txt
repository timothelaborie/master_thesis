```python
mapping = {
    "avalon 921": "avalon921",
    "avalon 941": "unknown",
    "avalon a1041": "unknown",
    "avalon a1166": "canaan avalonminer 1166 pro",  # Closest match based on model number.
    "avalon a1246": "canaan avalonminer 1246",
    "avalon a3255-q48 chip": "unknown",
    "avalon a3256 asic chip": "unknown",
    "avalon a6 miner": "unknown",
    "avalon a67s": "unknown",
    "avalon a7": "unknown",
    "avalon a721": "avalon721",
    "avalon a841 immersion cooling miners": "unknown",
    "avalon a921": "avalon921",
    "avalon and bfl units": "unknown",
    "avalon asic": "unknown",
    "avalon asic 20130819 firmware": "unknown",
    "avalon asic 72gh/s": "unknown",
    "avalon asic 85gh/s": "unknown",
    "avalon asic batch 2": "avalon batch 2",
    "avalon asic batch 3": "avalon batch 3",
    "avalon asic bitcoin miner": "unknown",
    "avalon asic board": "unknown",
    "avalon asic chip": "unknown",
    "avalon asic chips": "unknown",
    "avalon asic device": "unknown",
    "avalon asic gen2": "unknown",
    "avalon asic miner": "unknown",
    "avalon asic unit": "unknown",
    "avalon asic unit (avalon two)": "unknown",
    "avalon asic unit batch three": "avalon batch 3",
    "avalon asics": "unknown",
    "avalon asics chips": "unknown",
    "avalon avalon4": "unknown",
    "avalon b#2": "avalon batch 2",
    "avalon b1": "avalon batch 1",
    "avalon b1 unit": "avalon batch 1",
    "avalon b3 4 module": "unknown",
    "avalon based miner": "unknown",
    "avalon based order": "unknown",
    "avalon batch # 2": "avalon batch 2",
    "avalon batch #1": "avalon batch 1",
    "avalon batch #2": "avalon batch 2",
    "avalon batch #2 & #3 machines": "unknown",  # No direct match, implies both batches.
    "avalon batch #3": "avalon batch 3",
    "avalon batch 1": "avalon batch 1",
    "avalon batch 1 miner": "avalon batch 1",
    "avalon batch 1 unit": "avalon batch 1",
    "avalon batch 2": "avalon batch 2",
    "avalon batch 2 mini": "unknown",
    "avalon batch 2 or 3": "unknown",  # Implies either, but no direct match.
}
```